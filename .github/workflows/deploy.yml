name: Build & publish image to Docker Hub & deploy image to k8s

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v2
      
      - name: Restore dependencies
        run: |
          dotnet restore ./src/Troas.Customer.Api/Troas.Customer.Api.csproj
          dotnet restore ./tests/Troas.Customer.UnitTests/Troas.Customer.UnitTests.csproj 
          dotnet restore ./tests/Troas.Customer.IntegrationTests/Troas.Customer.IntegrationTests.csproj 
          dotnet restore ./tests/Troas.Customer.AcceptanceTests/Troas.Customer.AcceptanceTests.csproj 
      
      - name: Run Unit Tests
        run: |
          dotnet test tests/Troas.Customer.UnitTests/Troas.Customer.UnitTests.csproj --verbosity normal
      
      - name: Run Integration Tests
        run: |
          dotnet test tests/Troas.Customer.IntegrationTests/Troas.Customer.IntegrationTests.csproj --verbosity normal
          
      - name: Run Acceptance Tests
        run: |
          dotnet test tests/Troas.Customer.AcceptanceTests/Troas.Customer.AcceptanceTests.csproj --verbosity normal
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./src/Troas.Customer.Api/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/troas-customer-api:latest
  
  deploy-to-k8s:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      # Check out the code (only needed if deploying YAML files from repo. We do this again because the two jobs are disjoint)
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Create .kube directory
      - name: Create .kube directory
        run: mkdir -p ~/.kube

      # Set up KubeConfig
      - name: Set up KubeConfig
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: echo "$KUBECONFIG" > ~/.kube/config

      # Deploy to Kubernetes
      - name: Apply Kubernetes Manifests
        run: |
          kubectl apply -f src/Troas.Customer.Api/k8s/namespace.yaml --validate=false
          kubectl apply -f src/Troas.Customer.Api/k8s/deployment.yaml --validate=false
          kubectl apply -f src/Troas.Customer.Api/k8s/service.yaml --validate=false